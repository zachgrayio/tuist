// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/devtools/build/v1/build_status.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Status used for both invocation attempt and overall build completion.
public struct Google_Devtools_Build_V1_BuildStatus {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The end result.
  public var result: Google_Devtools_Build_V1_BuildStatus.Result = .unknownStatus

  /// Final invocation ID of the build, if there was one.
  /// This field is only set on a status in BuildFinished event.
  public var finalInvocationID: String = String()

  /// Build tool exit code. Integer value returned by the executed build tool.
  /// Might not be available in some cases, e.g., a build timeout.
  public var buildToolExitCode: SwiftProtobuf.Google_Protobuf_Int32Value {
    get {return _buildToolExitCode ?? SwiftProtobuf.Google_Protobuf_Int32Value()}
    set {_buildToolExitCode = newValue}
  }
  /// Returns true if `buildToolExitCode` has been explicitly set.
  public var hasBuildToolExitCode: Bool {return self._buildToolExitCode != nil}
  /// Clears the value of `buildToolExitCode`. Subsequent reads from it will return its default value.
  public mutating func clearBuildToolExitCode() {self._buildToolExitCode = nil}

  /// Fine-grained diagnostic information to complement the status.
  public var details: SwiftProtobuf.Google_Protobuf_Any {
    get {return _details ?? SwiftProtobuf.Google_Protobuf_Any()}
    set {_details = newValue}
  }
  /// Returns true if `details` has been explicitly set.
  public var hasDetails: Bool {return self._details != nil}
  /// Clears the value of `details`. Subsequent reads from it will return its default value.
  public mutating func clearDetails() {self._details = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// The end result of the Build.
  public enum Result: SwiftProtobuf.Enum {
    public typealias RawValue = Int

    /// Unspecified or unknown.
    case unknownStatus // = 0

    /// Build was successful and tests (if requested) all pass.
    case commandSucceeded // = 1

    /// Build error and/or test failure.
    case commandFailed // = 2

    /// Unable to obtain a result due to input provided by the user.
    case userError // = 3

    /// Unable to obtain a result due to a failure within the build system.
    case systemError // = 4

    /// Build required too many resources, such as build tool RAM.
    case resourceExhausted // = 5

    /// An invocation attempt time exceeded its deadline.
    case invocationDeadlineExceeded // = 6

    /// Build request time exceeded the request_deadline
    case requestDeadlineExceeded // = 8

    /// The build was cancelled by a call to CancelBuild.
    case cancelled // = 7
    case UNRECOGNIZED(Int)

    public init() {
      self = .unknownStatus
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unknownStatus
      case 1: self = .commandSucceeded
      case 2: self = .commandFailed
      case 3: self = .userError
      case 4: self = .systemError
      case 5: self = .resourceExhausted
      case 6: self = .invocationDeadlineExceeded
      case 7: self = .cancelled
      case 8: self = .requestDeadlineExceeded
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unknownStatus: return 0
      case .commandSucceeded: return 1
      case .commandFailed: return 2
      case .userError: return 3
      case .systemError: return 4
      case .resourceExhausted: return 5
      case .invocationDeadlineExceeded: return 6
      case .cancelled: return 7
      case .requestDeadlineExceeded: return 8
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  fileprivate var _buildToolExitCode: SwiftProtobuf.Google_Protobuf_Int32Value? = nil
  fileprivate var _details: SwiftProtobuf.Google_Protobuf_Any? = nil
}

#if swift(>=4.2)

extension Google_Devtools_Build_V1_BuildStatus.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Devtools_Build_V1_BuildStatus.Result] = [
    .unknownStatus,
    .commandSucceeded,
    .commandFailed,
    .userError,
    .systemError,
    .resourceExhausted,
    .invocationDeadlineExceeded,
    .requestDeadlineExceeded,
    .cancelled,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Google_Devtools_Build_V1_BuildStatus: @unchecked Sendable {}
extension Google_Devtools_Build_V1_BuildStatus.Result: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.devtools.build.v1"

extension Google_Devtools_Build_V1_BuildStatus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".BuildStatus"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    3: .standard(proto: "final_invocation_id"),
    4: .standard(proto: "build_tool_exit_code"),
    2: .same(proto: "details"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.result) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._details) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.finalInvocationID) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._buildToolExitCode) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if self.result != .unknownStatus {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    try { if let v = self._details {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    if !self.finalInvocationID.isEmpty {
      try visitor.visitSingularStringField(value: self.finalInvocationID, fieldNumber: 3)
    }
    try { if let v = self._buildToolExitCode {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Devtools_Build_V1_BuildStatus, rhs: Google_Devtools_Build_V1_BuildStatus) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.finalInvocationID != rhs.finalInvocationID {return false}
    if lhs._buildToolExitCode != rhs._buildToolExitCode {return false}
    if lhs._details != rhs._details {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Devtools_Build_V1_BuildStatus.Result: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN_STATUS"),
    1: .same(proto: "COMMAND_SUCCEEDED"),
    2: .same(proto: "COMMAND_FAILED"),
    3: .same(proto: "USER_ERROR"),
    4: .same(proto: "SYSTEM_ERROR"),
    5: .same(proto: "RESOURCE_EXHAUSTED"),
    6: .same(proto: "INVOCATION_DEADLINE_EXCEEDED"),
    7: .same(proto: "CANCELLED"),
    8: .same(proto: "REQUEST_DEADLINE_EXCEEDED"),
  ]
}
